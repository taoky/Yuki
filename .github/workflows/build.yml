name: build

on:
  - push
  - pull_request

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    env:
      NAME: yuki
      GO111MODULE: on
      GITHUB_TAG: ${{ github.event.release.tag_name }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            # GitHub Actions only provides amd64 arch now.
            GOOS: linux 
            GOARCH: amd64

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: Golang module cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    # TODO: before_script?

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
        
    - name: Start MongoDB
      run: sudo systemctl start mongod

    - name: Test
      run: ci/script.sh
    
    - name: Deploy - Build
      run: ci/build.sh
      if: ${{ env.GITHUB_TAG }}

    - name: Deploy - Create Release
      if: ${{ env.GITHUB_TAG }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Deploy - Upload Release
      if: ${{ env.GITHUB_TAG }}
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.NAME }}-*.tar.gz
    
    # TODO: deploy & notification?
